# Mount Google Drive
from google.colab import drive
drive.mount("/content/drive")

# Import libraries
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

# Load dataset
df = pd.read_csv('/content/drive/MyDrive/Data/netflix_titles.csv')

# Clean column names
df.columns = df.columns.str.strip().str.lower().str.replace(' ', '_')

# Inspecting the Dataset

print("Initial Data Info:\n")
print(df.info())
print("\nMissing Values:\n", df.isnull().sum())
print("\nDuplicates:", df.duplicated().sum())

# Drop duplicate rows
df.drop_duplicates(inplace=True)

# Handle missing values
df['director'] = df['director'].fillna('Unknown')
df['cast'] = df['cast'].fillna('Not Specified')
df['country'] = df['country'].fillna('Unknown')
df['rating'] = df['rating'].fillna(df['rating'].mode()[0])
df['date_added'] = pd.to_datetime(df['date_added'], errors='coerce')

# Extract features from date_added
df['year_added'] = df['date_added'].dt.year
df['month_added'] = df['date_added'].dt.month
df['weekday_added'] = df['date_added'].dt.day_name()

# Split genres into a list
df['listed_in_list'] = df['listed_in'].apply(lambda x: [i.strip() for i in x.split(',')] if pd.notnull(x) else [])

# Flag for multiple genres
df['multi_genre'] = df['listed_in_list'].apply(lambda x: len(x) > 1)

# Create content length feature (example logic)
df['content_length'] = np.where(df['type'].str.lower() == 'movie', 1, 10)

# Standardize country names
df['country'] = df['country'].replace({'united states of america': 'United States'})

# Remove outliers in release_year
df = df[(df['release_year'] >= 1920) & (df['release_year'] <= 2025)]
# Summary Statistics

print("\nSummary Statistics:\n", df.describe(include='all'))

# Aggregation Example

top_countries = df['country'].value_counts().head(10)
print("\nTop 10 Countries by Number of Titles:\n", top_countries)


#Visualizations
# Heatmap of missing values
plt.figure(figsize=(10, 5))
sns.heatmap(df.isnull(), cbar=False, cmap="viridis")
plt.title("Heatmap of Missing Values")
plt.show()

# Correlation matrix
numeric_cols = df.select_dtypes(include=['float64', 'int64'])
corr_matrix = numeric_cols.corr()

plt.figure(figsize=(8, 5))
sns.heatmap(corr_matrix, annot=True, cmap="coolwarm")
plt.title("Correlation Matrix")
plt.show()

# Final Preview

print("\nCleaned Netflix Dataset (First 5 rows):")
print(df.head())
